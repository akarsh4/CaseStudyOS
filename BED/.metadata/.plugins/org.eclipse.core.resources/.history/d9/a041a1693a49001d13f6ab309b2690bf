package com.sonata;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.sonata.controller.OrderController;
import com.sonata.model.orders;
import com.sonata.repository.OrderRepository;

@SpringBootTest
class OrderServiceApplicationTests {

	@Autowired
	OrderController ocon;
	
	@MockBean
	OrderRepository orepo;
	
	 @Test
		public void getCat() {
			when(orepo.findAll()).thenReturn((List<orders>) Stream.of(new orders(1L,2L,"Phonepe","Proccessing"),new orders(1L,2L,"Phonepe","Proccessing")).collect(Collectors.toList()));
			assertEquals(2,ocon.getAllOrder().size());
		}
	    @Test
	    public void saveProducts() {
	    	orders  orderprod = new orders(1L,2L,"Phonepe","Proccessing");
	    	when(orepo.save(orderprod)).thenReturn(orderprod);
	    	assertEquals(orderprod, ocon.saveOrder(orderprod));
	    }
	  /*  @Test
	    public void deleteProducts() {
	    	products prod = new products(1L,"samsung","Mobile",50000.0,"blue","white","f");
	    	pcon.deleteProducts(prod);
	    	verify(prepo, times(1)).delete(prod);
	    	
	    }*/

}
